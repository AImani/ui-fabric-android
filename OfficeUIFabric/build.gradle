apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'maven-publish'

android {
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 5
        versionName '0.1.6'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    productFlavors {
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    taskGraph.allTasks.forEach {
        if (it.name.contains("ReleaseUnitTest")) {
            it.enabled = false
        }
    }
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:exifinterface:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.0'
    api 'com.splitwise:tokenautocomplete:2.0.8@aar'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.0-alpha-3'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    repositories {
        maven {
            url 'https://onedrive.pkgs.visualstudio.com/_packaging/fabric-android/maven/v1'
            credentials {
                username = project.hasProperty("mavenUserName") ? "$mavenUserName" : ""
                password = project.hasProperty("mavenPassword") ? "$mavenPassword" : ""
            }
        }
    }
    publications {
        OfficeUIFabric(MavenPublication) {
            groupId 'com.microsoft'
            artifactId "$name"
            version = android.defaultConfig.versionName
            artifact(sourceJar)
            artifact(bundleReleaseAar)
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                // Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if (it.group != null && (it.name != null && it.name != "unspecified") && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}
